#!/usr/bin/evn python
# -*- coding:utf-8 -*-
# @Date    : 2019-11-13
# @Author  : suxianglun
# @Describe :
# @Version : 
"""
Django settings for boocax_crm_sys project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4*o(4639p-m00=-q_u6gysc991y#!ra#99_a9cepme04cg*55m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# 指定自定义用户模型 否则会报错auth.User.groups: (fields.E304)
AUTH_USER_MODEL = 'user.User'
# 如果用户不是通过点击登录和注销按钮，而是直接在页面输入 URL 来访问相关页面话，
# 那这个 next 就没有值，从而无法向之前那样跳转回用户之前访问的页面。
# 直接在浏览器的地址栏输入 /users/login/，由于在 URL 中没有传递 next，
# 所以就无法记录用户登录前的页面 URL，那在登录成功后就无法将他带回登录前的页面了
LOGOUT_REDIRECT_URL = '/users/login/'
LOGIN_REDIRECT_URL = '/crm/'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crm.apps.CrmConfig',
    'user.apps.UserConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'boocax_crm_sys.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'crm/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'label_with_classes': 'crm.templatetags.add_attr',
                'label_with_style': 'crm.templatetags.add_attr',
                'widget_with_classes': 'crm.templatetags.add_attr',

            }
        },

    },
]

WSGI_APPLICATION = 'boocax_crm_sys.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'boocax_crm',
        'USER': 'root',
        'PASSWORD': 'qwer1234',
        'HOST': 'localhost',
        'POST': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'  # 语言

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'  # 时区

USE_I18N = True  # 启动语言

USE_L10N = True  # 数据和时间格式

USE_TZ = True  # 启用时区

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# 静态文件路径
STATIC_URL = '/static/'
# 静态文件加载目录 上线的时候需要
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
